input UserObjectInput {
    userId: String!
    userName: String
    userBirthday: String
    userProduct: ProductType!
}

type ResultObject {
    attributeA: String!
    attributeB: String!
    attributeC: String
    productType: ProductType
}

scalar Date

enum ProductType {
    PRODUCT_A,
    PRODUCT_B,
    UNKNOWN
}

type Mutation {
    mutationWithEnum(input: ProductType!): ProductType!

    mutationWithEnumArray(input: [ProductType!]!): [ProductType!]!

    mutationWithNullableEnum(input: ProductType): ProductType

    mutationWithEnumArrayTest(input: [[ProductType]]!): [ProductType!]!




    mutationWithInputObject(input: UserObjectInput!): ResultObject!

    mutationWithInputObjectArray(input: [UserObjectInput!]!): [ResultObject!]!

    mutationWithNullableInputObject(input: UserObjectInput): ResultObject




    mutationWithValues(string: String!, int: Int!, float: Float!, boolean: Boolean!): ResultObject!

    mutationWithNullableValues(string: String, int: Int, float: Float, boolean: Boolean): ResultObject




    mutationWithScalar(input: Date!): ResultObject!

    mutationWithScalarArray(input: [Date!]!): [ResultObject!]!

    mutationWithNullableScalar(input: Date): ResultObject
}

type Query {
    helloWorld: String
}